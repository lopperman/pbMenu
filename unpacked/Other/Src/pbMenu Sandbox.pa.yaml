# ************************************************************************************************
# Warning: YAML source code for Canvas Apps should only be used to review changes made within Power Apps Studio and for minor edits (Preview).
# Use the maker portal to create and edit your Power Apps.
# 
# The schema file for Canvas Apps is available at https://go.microsoft.com/fwlink/?linkid=2304907
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
Screens:
  pbMenu Sandbox:
    Properties:
      Fill: =RGBA(255, 255, 255, 1)
      LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
      OnVisible: |-
        =UpdateContext({vertMenuKey: "testMenu"});
        UpdateContext({sb_EnableCollapse: true});
        UpdateContext({sb_DefaultCollapsed: true});
    Children:
      - hdrHelp_2:
          Control: Header@0.0.44
          Properties:
            Height: =40
            Logo: =stickeromglove
      - ButtonCanvas2:
          Control: Button@0.0.45
          Properties:
            OnSelect: |
              =pbMenu_1.CreateInfoItem("testMenu","Test Menu",pbMenu_1.ItemAppearanceChoices.Transparent,"tooltip test 1",true);
              pbMenu_1.CreateSpacer("testMenu",true);
              pbMenu_1.CreateMenuItem("testMenu","mi1","MI 1","Add",pbMenu_1.ItemAppearanceChoices.Primary,pbMenu_1.ItemIconStyleChoices.Filled, "mi1 tooltip",true,false,true);
              pbMenu_1.CreateMenuItem("testMenu","mi2","MI 2","Delete",pbMenu_1.ItemAppearanceChoices.Primary,pbMenu_1.ItemIconStyleChoices.Filled, "mi1 tooltip",true,true,true);
              pbMenu_1.CreateMenuItem("testMenu","mi3","MI 3","Edit",pbMenu_1.ItemAppearanceChoices.Secondary,pbMenu_1.ItemIconStyleChoices.Filled, "mi1 tooltip",false,false,true);

              pbMenu_1.CreateInfoItem("testMenu2","Test Menu 2",pbMenu_1.ItemAppearanceChoices.Transparent,"tooltip",true);
              pbMenu_1.CreateSpacer("testMenu2",true);
              pbMenu_1.CreateMenuItem("testMenu2","mi4","MI 4","Add",pbMenu_1.ItemAppearanceChoices.Primary,pbMenu_1.ItemIconStyleChoices.Filled, "mi1 tooltip",true,false,true);
              pbMenu_1.CreateMenuItem("testMenu2","mi5","MI 5","Add",pbMenu_1.ItemAppearanceChoices.Primary,pbMenu_1.ItemIconStyleChoices.Filled, "mi1 tooltip",true,true,true);
              pbMenu_1.CreateMenuItem("testMenu2","mi6","MI 6","Add",pbMenu_1.ItemAppearanceChoices.Primary,pbMenu_1.ItemIconStyleChoices.Filled, "mi1 tooltip",false,false,true);
            Text: ="Create Menu Items"
            Width: =200
            X: =179
            Y: =155
      - ButtonCanvas2_1:
          Control: Button@0.0.45
          Properties:
            OnSelect: |
              =If(vertMenuKey="testMenu",
                  UpdateContext({vertMenuKey:"testMenu2"}), 
                  UpdateContext({vertMenuKey:"testMenu"})
              )
            Text: ="Switch Vertical Menu"
            Width: =200
            X: =179
            Y: =227
      - ButtonCanvas2_2:
          Control: Button@0.0.45
          Properties:
            OnSelect: |-
              =If(IsBlankOrError(spin.waiting) || spin.waiting <> true, Set(spin,{waiting: true,msg: "Please wait"}), Set(spin,Blank()))
            Text: ="Toggle App Busy"
            Width: =200
            X: =179
            Y: =263
      - ButtonCanvas2_3:
          Control: Button@0.0.45
          Properties:
            BasePaletteColor: =RGBA(246, 142, 104, 1)
            OnSelect: =RemoveIf(col_pbMenu,StartsWith(Lower(menuKey),"testmenu"))
            Text: ="Clear Test Menu Items"
            Width: =200
            X: =179
            Y: =191
      - pbMenu_1:
          Control: CanvasComponent
          ComponentName: pbMenu
          Properties:
            BorderColor: =PowerAppsTheme.Colors.Darker20
            BorderWidth: =1
            BusyBehavior: =Self.BusyBehaviorChoices.Spinning
            BusyMessage: =""
            CancelMenuColorPalette: =
            ConfirmationColorPalette: =Color.Green
            DefaultCollapsedState: =true
            EnableUserCollapse: =true
            Height: =Self.MinimumHeight()
            IsBusy: =spin.waiting=true
            IsBusyEnabled: =true
            ManageItemStates: =true
            MenuColorPalette: =Color.Navy
            MenuItemTextColor: =
            MenuKey: ="testMenu"
            OnBeforeAction: |-
              =Switch(Upper(p_itemKey), 
                  //Add each menu item key here that you wish to handle from a specific pbMenu component added to a screen
                  //For menu items that will be rendered on multiple pbMenu components in your app, you can optionall ** not **
                  "[itemKey]",
                      //some work;
                      //some more work;
                      //return 'true
                      true, 

                  //always return false for unhandled menu item selections, so control can be passed back to [pbMenu].DoMenu()
                  false
              )
            OnRemoveMenuItem: =
            OverrideExpandedWidth: =0
            OverrideMinHeight: =0
            PerformanceLogging: =true
            Reset: |
              =Reset(pbMenu_1)
            ShowNavBackButton: =true
            ToolbarOrientation: =pbMenu_1.LayoutChoices.Horizontal
            ToolbarPadding: =""
            Width: =Parent.Width
            Y: =40
      - pbMenu_2:
          Control: CanvasComponent
          ComponentName: pbMenu
          Properties:
            BorderColor: =PowerAppsTheme.Colors.Darker20
            BorderWidth: =1
            BusyBehavior: =Self.BusyBehaviorChoices.Spinning
            BusyMessage: =""
            CancelMenuColorPalette: =
            ConfirmationColorPalette: =
            DefaultCollapsedState: =sb_DefaultCollapsed
            EnableUserCollapse: =sb_EnableCollapse
            Height: =603
            IsBusy: =spin.waiting=true
            IsBusyEnabled: =true
            ManageItemStates: =true
            MenuColorPalette: =
            MenuItemTextColor: =
            MenuKey: =vertMenuKey
            OnBeforeAction: |-
              =Switch(Upper(p_itemKey), 
                  //Add each menu item key here that you wish to handle from a specific pbMenu component added to a screen
                  //For menu items that will be rendered on multiple pbMenu components in your app, you can optionall ** not **
                  "[itemKey]",
                      //some work;
                      //some more work;
                      //return 'true
                      true, 

                  //always return false for unhandled menu item selections, so control can be passed back to [pbMenu].DoMenu()
                  false
              )
            OnRemoveMenuItem: =
            OverrideExpandedWidth: =150
            OverrideMinHeight: =0
            PerformanceLogging: =false
            Reset: =Reset(pbMenu_2)
            ShowNavBackButton: =false
            ToolbarOrientation: =Self.LayoutChoices.Vertical
            ToolbarPadding: =""
            Width: =Self.MinimumWidth()
            Y: =155
      - ButtonCanvas2_4:
          Control: Button@0.0.45
          Properties:
            OnSelect: =pbMenu_2.Collapse()
            Text: ="Force Collapse"
            Width: =200
            X: =179
            Y: =337
      - ButtonCanvas2_5:
          Control: Button@0.0.45
          Properties:
            OnSelect: =pbMenu_2.Expand()
            Text: ="Force Expand"
            Width: =200
            X: =179
            Y: =374
      - ButtonCanvas2_6:
          Control: Button@0.0.45
          Properties:
            Height: =50
            OnSelect: |-
              =UpdateContext({sb_EnableCollapse: Not(sb_EnableCollapse)});
            Text: |-
              =$"Toggle: Enable Collapse{const_CrLf}Currently={pbMenu_2.EnableUserCollapse}"
            Width: =200
            X: =179
            Y: =411
      - ButtonCanvas2_7:
          Control: Button@0.0.45
          Properties:
            Height: =50
            OnSelect: |-
              =UpdateContext({sb_DefaultCollapsed: Not(sb_DefaultCollapsed)});
            Text: |-
              =$"Toggle: Default Collapsed{const_CrLf}Currently={pbMenu_2.DefaultCollapsedState}"
            Width: =200
            X: =179
            Y: =466
      - TextCanvas4:
          Control: Text@0.0.51
          Properties:
            Align: ='TextCanvas.Align'.Center
            Height: =33
            Text: |-
              =$"CollapsedMode: {pbMenu_2.CollapsedMode()}"
            VerticalAlign: =VerticalAlign.Middle
            Weight: ='TextCanvas.Weight'.Bold
            Width: =200
            X: =179
            Y: =532
      - Image2:
          Control: Image@2.2.3
          Properties:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledFill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =4
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverFill: =RGBA(0, 0, 0, 0)
            Image: ="data:image/svg+xml;utf8, %3Csvg%20%20viewBox%3D%270%200%202048%202048%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%3E%3Cpath%20d%3D%27M1754%201220l142%20308-338%2030-30%20338-308-142-196%20277-196-277-308%20142-30-338-338-30%20142-308-277-196%20277-196-142-308%20338-30%2030-338%20308%20142%20196-277%20196%20277%20308-142%2030%20338%20338%2030-142%20308%20277%20196-277%20196zm-50%20196l-111-240%20216-152-216-152%20111-240-264-24-24-264-240%20111-152-216-152%20216-240-111-24%20264-264%2024%20111%20240-216%20152%20216%20152-111%20240%20264%2024%2024%20264%20240-111%20152%20216%20152-216%20240%20111%2024-264%20264-24z%27%20fill%3D%27%23d13438%27%3E%3C%2Fpath%3E%3C%2Fsvg%3E"
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedFill: =RGBA(0, 0, 0, 0)
            X: =633
            Y: =193
      - imgUser:
          Control: Image@2.2.3
          Properties:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledFill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =4
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverFill: =RGBA(0, 0, 0, 0)
            Image: =user
            PressedBorderColor: =RGBA(0, 0, 0, 0)
            PressedFill: =RGBA(0, 0, 0, 0)
            X: =799
            Y: =198
      - TextCanvas6:
          Control: Text@0.0.51
          Properties:
            Align: ='TextCanvas.Align'.Center
            AutoHeight: =true
            Fill: =RGBA(255, 255, 0, 1)
            Size: =18
            Text: ="Sandbox Area"
            VerticalAlign: =VerticalAlign.Middle
            Weight: ='TextCanvas.Weight'.Bold
            Width: '=Parent.Width - Self.X - 10 '
            X: '=pbMenu_2.X + pbMenu_2.Width + 10 '
            Y: '=pbMenu_1.Y + pbMenu_1.Height + 10 '
